"""
Hash tables are a type of data structure in which the address or the index value of the data element
is generated from a hash function. That makes accessing the data faster as the index value behaves as
a key for the data value. In other words Hash table stores key-value pairs but the key is generated
through a hashing function.

So the search and insertion function of a data element becomes much faster as the key values themselves
become the index of the array which stores the data.

In Python, the Dictionary data types represent the implementation of hash tables. The Keys in the
dictionary satisfy the following requirements.

The keys of the dictionary are hashable i.e. the are generated by hashing function which generates
unique result for each unique value supplied to the hash function. The order of data elements in a
dictionary is not fixed.
"""


# Declare a dictionary
dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}

dict['Age'] = 8 # update existing entry
dict['School'] = "DPS School" # Add new entry
print("dict['Age']: ", dict['Age'])
print("dict['School']: ", dict['School'])

del dict['Name'] # remove entry with key 'Name'
dict.clear()     # remove all entries in dict
del dict        # delete entire dictionary

print("dict['Age']: ", dict['Age'])
print("dict['School']: ", dict['School'])